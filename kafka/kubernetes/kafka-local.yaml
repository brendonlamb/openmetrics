## This is the local values.
## The top part is very important.  It specifies the internal and external listeners.

replicaCount: 1

config: |-
  confluent.support.metrics.enable=false  # Disables confluent metric submission
  # auto.leader.rebalance.enable=true
  # controlled.shutdown.enable=true
  # controlled.shutdown.max.retries=100
  zookeeper.connect=zookeeper

# Keep autoCreateTopicsEnable off so we can verify we have the correct topics in production.
autoCreateTopicsEnable: false

## Options required for external access via NodePort
## ref:
## - http://kafka.apache.org/documentation/#security_configbroker
## - https://cwiki.apache.org/confluence/display/KAFKA/KIP-103%3A+Separation+of+Internal+and+External+traffic
advertisedListeners:
  - EXTERNAL://$((3190 + ${KAFKA_BROKER_ID}))
## Setting "advertised.listeners" here appends to "PLAINTEXT://${POD_IP}:9092,", ensure you update the domain
## If external service type is Nodeport:
# advertisedListeners:
#   - EXTERNAL://:$((31090 + ${KAFKA_BROKER_ID}))
# advertisedListeners:
#   - EXTERNAL://kafka.cluster2.local:$((31090 + ${KAFKA_BROKER_ID}))
## If external service type is LoadBalancer and distinct is true:
# advertisedListeners:
#   - EXTERNAL://kafka-$((${KAFKA_BROKER_ID})).cluster.local:19092
## If external service type is LoadBalancer and distinct is false:
# advertisedListeners:
#   - EXTERNAL://${LOAD_BALANCER_IP}:31090
## Uncomment to define the EXTERNAL Listener protocol
listenerSecurityProtocolMap: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT

externalAccess:
  service:
    type: NodePort

## I tried Xmx128m but it kept hitting Java heap space issues.
heapOpts: "-Xmx256m"


## Persistence configuration. Specify if and how to persist data to a persistent volume.
##
persistence:
  ## The size of the PersistentVolume to allocate to each Kafka Pod in the StatefulSet.
  ##
  size: "128Mi"

## Topic creation and configuration.
## The job will be run on a deployment only when the config has been changed.
## - If 'partitions' and 'replicationFactor' are specified we create the topic (with --if-not-exists.)
## - If 'partitions', 'replicationFactor' and 'reassignPartitions' are specified we reassign the partitions to
## increase the replication factor of an existing topic.
## - If 'partitions' is specified we 'alter' the number of partitions. This will
## silently and safely fail if the new setting isnâ€™t strictly larger than the old (i.e. a NOOP.) Do be aware of the
## implications for keyed topics (ref: https://docs.confluent.io/current/kafka/post-deployment.html#admin-operations)
## - If 'defaultConfig' is specified it's deleted from the topic configuration. If it isn't present,
## it will silently and safely fail.
## - If 'config' is specified it's added to the topic configuration.
##
## Note: To increase the 'replicationFactor' of a topic, 'reassignPartitions' must be set to true (see above).
##
provisioning:
  enabled: true
  numPartitions: 1
  partitions: 1
  topics:
    - name: tracking.event.log-request
      # TODO - It looks like something is broken with the however partitions work.  This is worrisome.
      # partitions: 6
      # TODO - increase the max record size.
      config:
        # retention = 90 days.
        retention.ms: "7776000000"
        message.timestamp.type: LogAppendTime
    - name: metrics.blue.default.joined-event
      config:
        # retention = 90 days.
        retention.ms: "7776000000"
        message.timestamp.type: LogAppendTime
    - name: metrics.blue.default.joined-user-event
      config:
        # retention = 90 days.
        retention.ms: "7776000000"
        message.timestamp.type: LogAppendTime
    - name: metrics.blue.default.flat-response-insertion
      config:
        # retention = 90 days.
        retention.ms: "7776000000"
        message.timestamp.type: LogAppendTime
    - name: metrics.blue.default.flat-user-response-insertion
      config:
        # retention = 90 days.
        retention.ms: "7776000000"
        message.timestamp.type: LogAppendTime
    - name: metrics.blue.default.cumulated-content-metrics
      # This is only for local development.
      config:
        # retention = 90 days.
        retention.ms: "7776000000"
        message.timestamp.type: LogAppendTime

# ------------------------------------------------------------------------------
# Zookeeper:
# ------------------------------------------------------------------------------

zookeeper:
  enabled: false
